// Made with Blockbench 3.6.6
// Exported for Minecraft version 1.15
// Paste this class into your mod and generate all required imports


public class FroglinModel extends EntityModel<Entity> {
	private final ModelRenderer headPivot;
	private final ModelRenderer bodyPivot;
	private final ModelRenderer rightArmPivot;
	private final ModelRenderer rightArmClaws;
	private final ModelRenderer leftArmPivot;
	private final ModelRenderer leftArmClaws;
	private final ModelRenderer rightThighPivot;
	private final ModelRenderer leftThighPivot;

	public FroglinModel() {
		textureWidth = 64;
		textureHeight = 64;

		headPivot = new ModelRenderer(this);
		headPivot.setRotationPoint(0.0F, 0.0F, 0.0F);
		headPivot.setTextureOffset(0, 0).addBox(-3.0F, 6.0F, -5.0F, 6.0F, 6.0F, 8.0F, 0.01F, false);

		bodyPivot = new ModelRenderer(this);
		bodyPivot.setRotationPoint(0.0F, 2.0F, 0.0F);
		setRotationAngle(bodyPivot, 0.3491F, 0.0F, 0.0F);
		bodyPivot.setTextureOffset(16, 16).addBox(-3.0F, 9.7389F, -4.4805F, 6.0F, 12.0F, 4.0F, 0.0F, false);

		rightArmPivot = new ModelRenderer(this);
		rightArmPivot.setRotationPoint(-2.5F, 5.0F, 0.0F);
		setRotationAngle(rightArmPivot, -0.1745F, 0.0F, 0.0F);
		rightArmPivot.setTextureOffset(40, 16).addBox(-1.0F, 8.6744F, 0.7213F, 2.0F, 9.0F, 3.0F, 0.0F, false);

		rightArmClaws = new ModelRenderer(this);
		rightArmClaws.setRotationPoint(2.5F, 18.0F, 5.0F);
		rightArmPivot.addChild(rightArmClaws);
		setRotationAngle(rightArmClaws, 0.2618F, 0.0F, 0.0F);
		rightArmClaws.setTextureOffset(0, 0).addBox(-1.6F, -1.9509F, -3.3754F, 0.0F, 4.0F, 1.0F, 0.0F, false);
		rightArmClaws.setTextureOffset(0, 0).addBox(-2.4F, -1.9509F, -3.3754F, 0.0F, 4.0F, 1.0F, 0.0F, false);
		rightArmClaws.setTextureOffset(0, 0).addBox(-3.3F, -1.9509F, -3.3754F, 0.0F, 4.0F, 1.0F, 0.0F, false);

		leftArmPivot = new ModelRenderer(this);
		leftArmPivot.setRotationPoint(2.5F, 5.0F, 0.0F);
		setRotationAngle(leftArmPivot, -0.1745F, 0.0F, 0.0F);
		leftArmPivot.setTextureOffset(40, 16).addBox(-1.0F, 8.6744F, 0.7213F, 2.0F, 9.0F, 3.0F, 0.0F, true);

		leftArmClaws = new ModelRenderer(this);
		leftArmClaws.setRotationPoint(2.5F, 18.0F, 5.0F);
		leftArmPivot.addChild(leftArmClaws);
		setRotationAngle(leftArmClaws, 0.2618F, 0.0F, 0.0F);
		leftArmClaws.setTextureOffset(0, 0).addBox(-1.6F, -1.9509F, -3.3754F, 0.0F, 4.0F, 1.0F, 0.0F, false);
		leftArmClaws.setTextureOffset(0, 0).addBox(-2.4F, -1.9509F, -3.3754F, 0.0F, 4.0F, 1.0F, 0.0F, false);
		leftArmClaws.setTextureOffset(0, 0).addBox(-3.3F, -1.9509F, -3.3754F, 0.0F, 4.0F, 1.0F, 0.0F, false);

		rightThighPivot = new ModelRenderer(this);
		rightThighPivot.setRotationPoint(-2.0F, 12.0F, 4.0F);
		rightThighPivot.setTextureOffset(0, 16).addBox(-2.5F, 0.0F, -1.0F, 3.0F, 12.0F, 3.0F, 0.0F, false);

		leftThighPivot = new ModelRenderer(this);
		leftThighPivot.setRotationPoint(2.0F, 12.0F, 4.0F);
		leftThighPivot.setTextureOffset(0, 16).addBox(-0.5F, 0.0F, -1.0F, 3.0F, 12.0F, 3.0F, 0.0F, true);
	}

	@Override
	public void setRotationAngles(Entity entity, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch){
		//previously the render function, render code was moved to a method below
	}

	@Override
	public void render(MatrixStack matrixStack, IVertexBuilder buffer, int packedLight, int packedOverlay, float red, float green, float blue, float alpha){
		headPivot.render(matrixStack, buffer, packedLight, packedOverlay);
		bodyPivot.render(matrixStack, buffer, packedLight, packedOverlay);
		rightArmPivot.render(matrixStack, buffer, packedLight, packedOverlay);
		leftArmPivot.render(matrixStack, buffer, packedLight, packedOverlay);
		rightThighPivot.render(matrixStack, buffer, packedLight, packedOverlay);
		leftThighPivot.render(matrixStack, buffer, packedLight, packedOverlay);
	}

	public void setRotationAngle(ModelRenderer modelRenderer, float x, float y, float z) {
		modelRenderer.rotateAngleX = x;
		modelRenderer.rotateAngleY = y;
		modelRenderer.rotateAngleZ = z;
	}
}